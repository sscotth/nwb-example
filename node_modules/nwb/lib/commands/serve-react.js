'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _resolve = require('resolve');

var _resolve2 = _interopRequireDefault(_resolve);

var _errors = require('../errors');

var _serveReact = require('../serveReact');

var _serveReact2 = _interopRequireDefault(_serveReact);

var _utils = require('../utils');

/**
 * Serve a standalone React entry module.
 */

exports['default'] = function (args, cb) {
  if (args._.length === 1) {
    return cb(new _errors.UserError('nwb: serve-react: an entry module must be specified'));
  }

  // Install React if it's not available
  try {
    _resolve2['default'].sync('react', { basedir: process.cwd() });
  } catch (e) {
    console.log('nwb: React is not available locally, installing...');
    _utils.installReact();
  }

  var entry = _path2['default'].resolve(args._[1]);

  console.log('nwb: serve-react');
  _serveReact2['default'](args, {
    entry: entry,
    output: {
      filename: 'app.js',
      path: process.cwd(),
      publicPath: '/'
    },
    loaders: {
      babel: {
        query: {
          stage: 0,
          optional: ['runtime']
        }
      }
    },
    plugins: {
      html: {
        mountId: args['mount-id'] || 'app',
        title: args.title || 'React App'
      }
    }
  }, cb);
};

module.exports = exports['default'];
'use strict';

exports.__esModule = true;
exports['default'] = getPluginConfig;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _resolve = require('resolve');

var _resolve2 = _interopRequireDefault(_resolve);

var _webpackMerge = require('webpack-merge');

var _webpackMerge2 = _interopRequireDefault(_webpackMerge);

var _debug = require('./debug');

var _debug2 = _interopRequireDefault(_debug);

var _utils = require('./utils');

/**
 * Look for nwb-* plugin dependencies in package.json, import them and merge the
 * plugin config objects they export.
 */

function getPluginConfig() {
  var cwd = arguments.length <= 0 || arguments[0] === undefined ? process.cwd() : arguments[0];

  var pkg = undefined;
  try {
    pkg = require(_path2['default'].join(cwd, 'package.json'));
  } catch (e) {
    return {};
  }

  var plugins = [].concat(Object.keys(pkg.dependencies || {}), Object.keys(pkg.devDependencies || {})).filter(function (dep) {
    return (/^nwb-/.test(dep)
    );
  });

  _debug2['default']('%s nwb-* dependencies in package.json', plugins.length);
  if (!plugins.length) {
    return {};
  }

  _debug2['default']('nwb-* dependencies: %o', plugins);

  var pluginConfig = {};
  plugins.forEach(function (plugin) {
    var pluginModule = require(_resolve2['default'].sync(plugin, { basedir: cwd }));
    pluginConfig = _webpackMerge2['default'](pluginConfig, pluginModule);
  });

  _debug2['default']('plugin config: %s', _utils.deepToString(pluginConfig));

  return pluginConfig;
}

module.exports = exports['default'];
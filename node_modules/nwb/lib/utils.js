'use strict';

exports.__esModule = true;
exports.copyPublicDir = copyPublicDir;
exports.createBanner = createBanner;
exports.createWebpackExternals = createWebpackExternals;
exports.deepToString = deepToString;
exports.endsWith = endsWith;
exports.installReact = installReact;
exports.typeOf = typeOf;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _child_process = require('child_process');

var _util = require('util');

var _util2 = _interopRequireDefault(_util);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _glob = require('glob');

var _glob2 = _interopRequireDefault(_glob);

var _debug = require('./debug');

var _debug2 = _interopRequireDefault(_debug);

var GITKEEP_RE = /\.gitkeep$/;

function copyPublicDir(from, to) {
  _fsExtra2['default'].ensureDirSync(to);
  if (_glob2['default'].sync(from + '/').length !== 0) {
    _fsExtra2['default'].copySync(from, to, {
      filter: function filter(file) {
        return !GITKEEP_RE.test(file);
      }
    });
  }
}

function createBanner(pkg) {
  var banner = pkg.name + ' ' + pkg.version;
  if (pkg.homepage) {
    banner += ' - ' + pkg.homepage;
  }
  if (pkg.license) {
    banner += '\n' + pkg.license + ' Licensed';
  }
  return banner;
}

function createWebpackExternals() {
  var externals = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  return Object.keys(externals).reduce(function (webpackExternals, packageName) {
    var globalName = externals[packageName];
    webpackExternals[packageName] = {
      root: globalName,
      commonjs2: packageName,
      commonjs: packageName,
      amd: packageName
    };
    return webpackExternals;
  }, {});
}

/**
 * Log objects in their entirety so we can see everything in debug output.
 */

function deepToString(object) {
  return _util2['default'].inspect(object, { colors: true, depth: null });
}

/**
 * String.prototype.endsWith() is behind the --harmony flag in Node.js v0.12.
 */

function endsWith(s1, s2) {
  return s1.lastIndexOf(s2) === s1.length - s2.length;
}

/**
 * Install react for the user when it's needed.
 */

function installReact() {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var _ref$dev = _ref.dev;
  var dev = _ref$dev === undefined ? false : _ref$dev;
  var _ref$save = _ref.save;
  var save = _ref$save === undefined ? false : _ref$save;
  var _ref$cwd = _ref.cwd;
  var cwd = _ref$cwd === undefined ? process.cwd() : _ref$cwd;
  var _ref$version = _ref.version;
  var version = _ref$version === undefined ? 'latest' : _ref$version;

  var command = 'npm install' + (save ? ' --save' + (dev ? '-dev' : '') : '') + ' react@' + version + ' react-dom@' + version;
  _debug2['default'](cwd + ' $ ' + command);
  _child_process.execSync(command, { cwd: cwd, stdio: [0, 1, 2] });
}

/**
 * Better typeof.
 */

function typeOf(o) {
  if (Number.isNaN(o)) return 'nan';
  return Object.prototype.toString.call(o).slice(8, -1).toLowerCase();
}